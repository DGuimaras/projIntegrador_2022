package com.example.demo;

import java.io.IOException;
import java.net.URI;
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.ArrayList;
import java.util.HashMap;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.List;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.example.demo.UserRepository;
import com.example.demo.models.User;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import static org.junit.jupiter.api.Assertions.assertEquals;

@SpringBootTest
public class DemoApplicationTests extends MainController{
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@Test
	public void testDeleteById() {
		int num_users = userRepository.findAll().size();
		User employee = getUser();
		userRepository.save(employee);
		userRepository.deleteById(employee.getId());
		List<User> result = new ArrayList<>();
		userRepository.findAll().forEach(e -> result.add(e));
		assertEquals(result.size(), num_users);
	}

	@Test
	public void testSave() {
		User test_user = getUser();
		userRepository.save(test_user);
		User found = userRepository.findById(test_user.getId()).get();
		assertEquals(test_user.getId(), found.getId());
		userRepository.delete( userRepository.findById(test_user.getId()).get());
	}
	@Test
	public void testFindAll() {
		int num_users = userRepository.findAll().size();
		User test_user = getUser();
		userRepository.save(test_user);
		List<User> result = new ArrayList<>();
		userRepository.findAll().forEach(e -> result.add(e));
		assertEquals(result.size(), num_users+1);
		userRepository.delete( userRepository.findById(test_user.getId()).get());
	}
	@Test
	public void findAllUsers() {}
	private User getUser() {
		User test_user = new User();
		test_user.setUserName("example");
		test_user.setActive(true);
		test_user.setPassword("example_pass");
		test_user.setRoles("ROLE_ADMIN");
		return test_user;
	}

}